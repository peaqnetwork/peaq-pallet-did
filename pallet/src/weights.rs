
//! Autogenerated weights for `peaq_pallet_did`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-24, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `NeutrinoksDell`, CPU: `13th Gen Intel(R) Core(TM) i7-13700H`
//! EXECUTION: Some(Native), WASM-EXECUTION: Compiled, CHAIN: Some("dev-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/peaq-node
// benchmark
// pallet
// --chain=dev-local
// --execution=native
// --wasm-execution=compiled
// --pallet=peaq-pallet-did
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `peaq_pallet_did`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	/// Storage: PeaqDid AttributeStore (r:1 w:1)
	/// Proof Skipped: PeaqDid AttributeStore (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: PeaqDid OwnerStore (r:0 w:1)
	/// Proof Skipped: PeaqDid OwnerStore (max_values: None, max_size: None, mode: Measured)
	fn add_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `115`
		//  Estimated: `3580`
		// Minimum execution time: 25_369_000 picoseconds.
		Weight::from_parts(25_976_000, 0)
			.saturating_add(Weight::from_parts(0, 3580))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: PeaqDid OwnerStore (r:1 w:0)
	/// Proof Skipped: PeaqDid OwnerStore (max_values: None, max_size: None, mode: Measured)
	/// Storage: PeaqDid AttributeStore (r:1 w:1)
	/// Proof Skipped: PeaqDid AttributeStore (max_values: None, max_size: None, mode: Measured)
	fn update_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `3817`
		// Minimum execution time: 31_448_000 picoseconds.
		Weight::from_parts(32_028_000, 0)
			.saturating_add(Weight::from_parts(0, 3817))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: PeaqDid AttributeStore (r:1 w:0)
	/// Proof Skipped: PeaqDid AttributeStore (max_values: None, max_size: None, mode: Measured)
	fn read_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `252`
		//  Estimated: `3717`
		// Minimum execution time: 20_654_000 picoseconds.
		Weight::from_parts(21_769_000, 0)
			.saturating_add(Weight::from_parts(0, 3717))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: PeaqDid OwnerStore (r:1 w:0)
	/// Proof Skipped: PeaqDid OwnerStore (max_values: None, max_size: None, mode: Measured)
	/// Storage: PeaqDid AttributeStore (r:1 w:1)
	/// Proof Skipped: PeaqDid AttributeStore (max_values: None, max_size: None, mode: Measured)
	fn remove_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `348`
		//  Estimated: `3813`
		// Minimum execution time: 25_536_000 picoseconds.
		Weight::from_parts(25_990_000, 0)
			.saturating_add(Weight::from_parts(0, 3813))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
